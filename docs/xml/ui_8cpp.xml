<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ui_8cpp" kind="file" language="C++">
    <compoundname>ui.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">chrono</includes>
    <includes local="yes">ros/ros.h</includes>
    <includes local="yes">actionlib_msgs/GoalID.h</includes>
    <includes local="yes">move_base_msgs/MoveBaseActionGoal.h</includes>
    <includes local="yes">move_base_msgs/MoveBaseActionFeedback.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/ui.cpp</label>
        <link refid="ui_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>move_base_msgs/MoveBaseActionGoal.h</label>
      </node>
      <node id="7">
        <label>move_base_msgs/MoveBaseActionFeedback.h</label>
      </node>
      <node id="5">
        <label>actionlib_msgs/GoalID.h</label>
      </node>
      <node id="4">
        <label>ros/ros.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>chrono</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ui_8cpp_1a45ba202b05caf39795aeca91b0ae547e" prot="public" static="no">
        <name>TIMEOUT</name>
        <initializer>120</initializer>
        <briefdescription>
<para>Timeout = 2minutes (goal cancelled after timeout) <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="35" column="9" bodyfile="src/ui.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ui_8cpp_1ae057aae7fbba2a4cef62321020305295" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher pub_goal</definition>
        <argsstring></argsstring>
        <name>pub_goal</name>
        <briefdescription>
<para>Publisher to send the goal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="38" column="16" bodyfile="src/ui.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a33cbe548b1e0f6b08bbe754f53af458c" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher pub_cancel</definition>
        <argsstring></argsstring>
        <name>pub_cancel</name>
        <briefdescription>
<para>Publisher to cancel the goal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="39" column="16" bodyfile="src/ui.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1abc2407a897aa2b5d1d9d65f6728027dd" prot="public" static="no" mutable="no">
        <type>actionlib_msgs::GoalID</type>
        <definition>actionlib_msgs::GoalID canc_goal</definition>
        <argsstring></argsstring>
        <name>canc_goal</name>
        <briefdescription>
<para>Action message to cancel the goal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="42" column="24" bodyfile="src/ui.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a1292e042df88fd7461a4dc998912f6d1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool goal</definition>
        <argsstring></argsstring>
        <name>goal</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Boolean defining if there is a goal active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="44" column="6" bodyfile="src/ui.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a0fc1f09b9abf6843e19b643f448bef53" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool shutdown</definition>
        <argsstring></argsstring>
        <name>shutdown</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Boolean defining if user wants to exit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="45" column="6" bodyfile="src/ui.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a829831b69f522e8f5ae5dcdc28158d3e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float x_goal</definition>
        <argsstring></argsstring>
        <name>x_goal</name>
        <briefdescription>
<para>Coordinate X of the goal. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="48" column="7" bodyfile="src/ui.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a20e8d23393e688fc52779c872bdc1e45" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float y_goal</definition>
        <argsstring></argsstring>
        <name>y_goal</name>
        <briefdescription>
<para>Coordinate Y of the goal. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="49" column="7" bodyfile="src/ui.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1ad8d2f977aec638fff47fff3c61b88ad5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string id_goal</definition>
        <argsstring></argsstring>
        <name>id_goal</name>
        <briefdescription>
<para>Goal ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="50" column="13" bodyfile="src/ui.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a6f587a0eb512cde589958649fbe0be71" prot="public" static="no" mutable="no">
        <type>std::chrono::high_resolution_clock::time_point</type>
        <definition>std::chrono::high_resolution_clock::time_point start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
<para>Starting time of goal reaching. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="53" column="48" bodyfile="src/ui.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1af1d374bbc631bb15a8f3b7f5208c921b" prot="public" static="no" mutable="no">
        <type>std::chrono::high_resolution_clock::time_point</type>
        <definition>std::chrono::high_resolution_clock::time_point end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
<para>Ending time of goal reaching. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="54" column="48" bodyfile="src/ui.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8cpp_1a993dee0d19091c6d48fdeda230fd6be0" prot="public" static="no" mutable="no">
        <type>long int</type>
        <definition>long int duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <briefdescription>
<para>Duration time of goal reaching. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="55" column="10" bodyfile="src/ui.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ui_8cpp_1a166ff10178716638dad268b1ddab8242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inputCommand</definition>
        <argsstring>()</argsstring>
        <name>inputCommand</name>
        <briefdescription>
<para>Main menu to input commands. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays the main menu and takes commands from the user to choose the modality or to quit the program. When in autonomously driving mode, it provides a command to cancel the goal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="105" column="6" bodyfile="src/ui.cpp" bodystart="105" bodyend="158" declfile="src/ui.cpp" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8cpp_1ac44135482fcab66ae9b51aa8e4e6cb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inputGoal</definition>
        <argsstring>()</argsstring>
        <name>inputGoal</name>
        <briefdescription>
<para>Function to input the goal coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the user choose autonomously driving mode. It takes the goal coordinates from him and starts the action, changing the state of the robot and starting the timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="167" column="6" bodyfile="src/ui.cpp" bodystart="167" bodyend="188" declfile="src/ui.cpp" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8cpp_1aa098f199ee60423fd257562757fa6ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkGoalStatus</definition>
        <argsstring>(const move_base_msgs::MoveBaseActionFeedback::ConstPtr &amp;feedbackMsg)</argsstring>
        <name>checkGoalStatus</name>
        <param>
          <type>const move_base_msgs::MoveBaseActionFeedback::ConstPtr &amp;</type>
          <declname>feedbackMsg</declname>
        </param>
        <briefdescription>
<para>Callback function of /move_base/feedback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feedbackMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Action move_base feedback.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function updates the goal ID and checks if the goal has been reached or it cannot be reached, displaying a message in those cases. If the timeout has been exceeded, it cancels the goal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="198" column="6" bodyfile="src/ui.cpp" bodystart="198" bodyend="229" declfile="src/ui.cpp" declline="62" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cancelGoal</definition>
        <argsstring>()</argsstring>
        <name>cancelGoal</name>
        <briefdescription>
<para>Function to cancel the goal. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to cancel a goal, by publishing a message with the goal ID in &apos;/move_base/cancel&apos;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="236" column="6" bodyfile="src/ui.cpp" bodystart="236" bodyend="246" declfile="src/ui.cpp" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function of the UI node. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the main function of the user interface node. It initializes the node, defines publishers (to set and cancel a goal) and a subscriber (to get the action feedback). After that, it repeatdly calls the &apos;inputCommand&apos; function until user wants to exit, so that it shutdown the node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui.cpp" line="71" column="5" bodyfile="src/ui.cpp" bodystart="71" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>User interface controller of the robot. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mohammad Al Horany </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>10/04/2022</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">assistant</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines if the collision avoidance is on.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Subscribes to: <linebreak/>
<itemizedlist>
<listitem><para>/move_base/feedback It contains the feedback of the move_base action</para>
</listitem></itemizedlist>
</para>
<para>Publishes to: <linebreak/>
<itemizedlist>
<listitem><para>/move_base/goal It permits to set a goal via move_base action</para>
</listitem><listitem><para>/move_base/cancel It permits to cancel a goal via move_base action</para>
</listitem></itemizedlist>
</para>
<para>Description : <linebreak/>
</para>
<para>This is the main node of the program. It provides a main menu to the user, who can choose the modality among the three mentioned. It is executed by the launch file and it is always active. It also implements the automatic mode (reach the goal autonomously), by simply taking the goal coordinate from the user and publishing it in move_base/goal topic. It receives feedback and it checks the status from the action. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="28"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ros/ros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;actionlib_msgs/GoalID.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;move_base_msgs/MoveBaseActionGoal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;move_base_msgs/MoveBaseActionFeedback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMEOUT<sp/>120<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PUBLISHERS<sp/>DECLARING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">ros::Publisher<sp/><ref refid="ui_8cpp_1ae057aae7fbba2a4cef62321020305295" kindref="member">pub_goal</ref>;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">ros::Publisher<sp/><ref refid="ui_8cpp_1a33cbe548b1e0f6b08bbe754f53af458c" kindref="member">pub_cancel</ref>;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MESSAGE<sp/>TO<sp/>CANCEL<sp/>THE<sp/>GOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">actionlib_msgs::GoalID<sp/><ref refid="ui_8cpp_1abc2407a897aa2b5d1d9d65f6728027dd" kindref="member">canc_goal</ref>;<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a1292e042df88fd7461a4dc998912f6d1" kindref="member">goal</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a0fc1f09b9abf6843e19b643f448bef53" kindref="member">shutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GOAL<sp/>COORDINATES<sp/>AND<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a829831b69f522e8f5ae5dcdc28158d3e" kindref="member">x_goal</ref>;<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a20e8d23393e688fc52779c872bdc1e45" kindref="member">y_goal</ref>;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal">std::string<sp/><ref refid="ui_8cpp_1ad8d2f977aec638fff47fff3c61b88ad5" kindref="member">id_goal</ref>;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TIME<sp/>VARIABLES<sp/>TO<sp/>MEASURE<sp/>DURATION<sp/>OF<sp/>DRIVING<sp/>AUTONOMOUSLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">std::chrono::high_resolution_clock::time_point<sp/><ref refid="ui_8cpp_1a6f587a0eb512cde589958649fbe0be71" kindref="member">start</ref>;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">std::chrono::high_resolution_clock::time_point<sp/><ref refid="ui_8cpp_1af1d374bbc631bb15a8f3b7f5208c921b" kindref="member">end</ref>;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a993dee0d19091c6d48fdeda230fd6be0" kindref="member">duration</ref>;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//MAIN<sp/>MENU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a166ff10178716638dad268b1ddab8242" kindref="member">inputCommand</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//FUNCTIONS<sp/>TO<sp/>REACH<sp/>GOAL<sp/>AUTONOMOUSLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1ac44135482fcab66ae9b51aa8e4e6cb95" kindref="member">inputGoal</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1aa098f199ee60423fd257562757fa6ed8" kindref="member">checkGoalStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>move_base_msgs::MoveBaseActionFeedback::ConstPtr&amp;<sp/>feedbackMsg);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NODE<sp/>INITIALIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;ui_node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PUBLISHERS<sp/>DEFINING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1ae057aae7fbba2a4cef62321020305295" kindref="member">pub_goal</ref><sp/>=<sp/>nh.advertise&lt;move_base_msgs::MoveBaseActionGoal&gt;(</highlight><highlight class="stringliteral">&quot;move_base/goal&quot;</highlight><highlight class="normal">,<sp/>1000);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a33cbe548b1e0f6b08bbe754f53af458c" kindref="member">pub_cancel</ref><sp/>=<sp/>nh.advertise&lt;actionlib_msgs::GoalID&gt;(</highlight><highlight class="stringliteral">&quot;move_base/cancel&quot;</highlight><highlight class="normal">,<sp/>1000);<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SUBSCRIBERS<sp/>DEFINING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>sub_feedback<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/move_base/feedback&quot;</highlight><highlight class="normal">,<sp/>1000,<sp/><ref refid="ui_8cpp_1aa098f199ee60423fd257562757fa6ed8" kindref="member">checkGoalStatus</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MULTI-THREADING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::AsyncSpinner<sp/>spinner(2);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.start();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="ui_8cpp_1a0fc1f09b9abf6843e19b643f448bef53" kindref="member">shutdown</ref>)<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a166ff10178716638dad268b1ddab8242" kindref="member">inputCommand</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.stop();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a0fc1f09b9abf6843e19b643f448bef53" kindref="member">ros::shutdown</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::waitForShutdown();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a166ff10178716638dad268b1ddab8242" kindref="member">inputCommand</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>command<sp/>from<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>input;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n\n<sp/>MAIN<sp/>MENU:\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t[1]<sp/>Set<sp/>a<sp/>new<sp/>goal<sp/>to<sp/>be<sp/>reached<sp/>autonomosly\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t[2]<sp/>Drive<sp/><sp/>robot<sp/>with<sp/>the<sp/>keyboard<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t[3]<sp/>Drive<sp/>the<sp/>robot<sp/>with<sp/>keyboard<sp/>+<sp/>Collision<sp/>Avoidance<sp/>Assistant\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----------------------------------------------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\t\t\t[0]<sp/>CANCEL<sp/>GOAL\t<sp/>[Q]<sp/>QUIT\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>input;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ignore<sp/>all<sp/>characters<sp/>after<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(),<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(input)<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INPUT<sp/>GOAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1ac44135482fcab66ae9b51aa8e4e6cb95" kindref="member">inputGoal</ref>();<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MANUAL<sp/>DRIVE<sp/>MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::param::set(</highlight><highlight class="stringliteral">&quot;collisionAssistant&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;rosrun<sp/>final_assignment<sp/>manual_node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MANUAL<sp/>DRIVE<sp/>MODE<sp/>with<sp/>CollisionAssistant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::param::set(</highlight><highlight class="stringliteral">&quot;collisionAssistant&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;rosrun<sp/>final_assignment<sp/>manual_node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CANCEL<sp/>GOAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QUIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a0fc1f09b9abf6843e19b643f448bef53" kindref="member">shutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n\t<sp/>===<sp/><sp/><sp/>COMMAND<sp/>NOT<sp/>VALID<sp/><sp/><sp/>===&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1ac44135482fcab66ae9b51aa8e4e6cb95" kindref="member">inputGoal</ref>()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>move_base_msgs::MoveBaseActionGoal<sp/>goal_msg;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>new<sp/>goal<sp/>from<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n<sp/>\t<sp/>NEW<sp/>GOAL<sp/>COORDINATES<sp/>\n\n<sp/><sp/>Enter<sp/>X:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/><ref refid="ui_8cpp_1a829831b69f522e8f5ae5dcdc28158d3e" kindref="member">x_goal</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/>Enter<sp/>Y:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/><ref refid="ui_8cpp_1a20e8d23393e688fc52779c872bdc1e45" kindref="member">y_goal</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>new<sp/>coordinates<sp/>to<sp/>reach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.goal.target_pose.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.goal.target_pose.pose.orientation.w<sp/>=<sp/>1;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.goal.target_pose.pose.position.x<sp/>=<sp/><ref refid="ui_8cpp_1a829831b69f522e8f5ae5dcdc28158d3e" kindref="member">x_goal</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.goal.target_pose.pose.position.y<sp/>=<sp/><ref refid="ui_8cpp_1a20e8d23393e688fc52779c872bdc1e45" kindref="member">y_goal</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>new<sp/>goal<sp/>and<sp/>change<sp/>state<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1ae057aae7fbba2a4cef62321020305295" kindref="member">pub_goal</ref>.publish(goal_msg);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a1292e042df88fd7461a4dc998912f6d1" kindref="member">goal</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a6f587a0eb512cde589958649fbe0be71" kindref="member">start</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1aa098f199ee60423fd257562757fa6ed8" kindref="member">checkGoalStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>move_base_msgs::MoveBaseActionFeedback::ConstPtr&amp;<sp/>feedbackMsg)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UPDATE<sp/>GOAL<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ui_8cpp_1ad8d2f977aec638fff47fff3c61b88ad5" kindref="member">id_goal</ref><sp/>!=<sp/>feedbackMsg-&gt;status.goal_id.id)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1ad8d2f977aec638fff47fff3c61b88ad5" kindref="member">id_goal</ref><sp/>=<sp/>feedbackMsg-&gt;status.goal_id.id;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1af1d374bbc631bb15a8f3b7f5208c921b" kindref="member">end</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a993dee0d19091c6d48fdeda230fd6be0" kindref="member">duration</ref><sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::seconds&gt;(<ref refid="ui_8cpp_1af1d374bbc631bb15a8f3b7f5208c921b" kindref="member">end</ref><sp/>-<sp/><ref refid="ui_8cpp_1a6f587a0eb512cde589958649fbe0be71" kindref="member">start</ref>).count();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ui_8cpp_1a993dee0d19091c6d48fdeda230fd6be0" kindref="member">duration</ref><sp/>&gt;<sp/><ref refid="ui_8cpp_1a45ba202b05caf39795aeca91b0ae547e" kindref="member">TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>TIMEOUT<sp/>EXCEEDED<sp/>:<sp/>The<sp/>goal<sp/>can&apos;t<sp/>be<sp/>reached!<sp/>\n\n<sp/>Enter<sp/>a<sp/>new<sp/>command:<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();<sp/></highlight><highlight class="comment">//<sp/>Cancel<sp/>the<sp/>goal<sp/>if<sp/>it<sp/>can&apos;t<sp/>be<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Elapsed<sp/>time<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="ui_8cpp_1a993dee0d19091c6d48fdeda230fd6be0" kindref="member">duration</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seconds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>feedbackMsg-&gt;status.status;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>status<sp/>!=<sp/>4)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>3)<sp/></highlight><highlight class="comment">//SUCCEDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\t===<sp/><sp/><sp/>GOAL<sp/>REACHED<sp/><sp/><sp/><sp/>===&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ABORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\t===<sp/><sp/><sp/>THE<sp/>GOAL<sp/>CANNOT<sp/>BE<sp/>REACHED<sp/><sp/><sp/>===&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ui_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>()</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ui_8cpp_1a1292e042df88fd7461a4dc998912f6d1" kindref="member">goal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1abc2407a897aa2b5d1d9d65f6728027dd" kindref="member">canc_goal</ref>.id<sp/>=<sp/><ref refid="ui_8cpp_1ad8d2f977aec638fff47fff3c61b88ad5" kindref="member">id_goal</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a33cbe548b1e0f6b08bbe754f53af458c" kindref="member">pub_cancel</ref>.publish(<ref refid="ui_8cpp_1abc2407a897aa2b5d1d9d65f6728027dd" kindref="member">canc_goal</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui_8cpp_1a1292e042df88fd7461a4dc998912f6d1" kindref="member">goal</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n\t===<sp/><sp/><sp/>GOAL<sp/>CANCELLED<sp/><sp/><sp/>===\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n\t===<sp/><sp/><sp/>NO<sp/>GOAL<sp/>TO<sp/>CANCEL<sp/><sp/><sp/>===\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ui.cpp"/>
  </compounddef>
</doxygen>
